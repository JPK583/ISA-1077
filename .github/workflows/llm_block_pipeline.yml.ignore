name: llm-block-pipline

on:
  workflow_dispatch:
    inputs:
      target_enviornment:
        description: "Desired environment flag to check for in pipeline annotations (e.g., Production)."
        type: string
        required: true
        default: "Production"

jobs:
  check-enviornment:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Make verify script executable
        run: chmod +x .github/workflows/llm_verify_annotation.sh

      - name: Verify annotations and collect ready folders
        id: verify
        run: |
          .github/workflows/llm_verify_annotation.sh "${{ inputs.target_enviornment }}"
          echo "READY_LIST=.tmp/ready_folders.txt" >> $GITHUB_ENV

      # Build a .octoignore so Octopus won't package these folders
      # If a folder token is "ROOT", we exclude top-level items accordingly.
      - name: Generate .octoignore from ready folders
        run: |
          set -euo pipefail
          OCTO=".octoignore"
          : > "${OCTO}"

          if [[ -s "${READY_LIST}" ]]; then
            echo "# Auto-generated by workflow to exclude ready-for-${{ inputs.target_enviornment }} features" >> "${OCTO}"
            sort -u "${READY_LIST}" | while read -r FOLDER; do
              if [[ "${FOLDER}" == "ROOT" ]]; then
                # Exclude root-level JSONs in pipeline/dataset/dataflow
                echo "pipeline/*.json"   >> "${OCTO}"
                echo "dataset/*.json"    >> "${OCTO}"
                echo "dataflow/*.json"   >> "${OCTO}"
              else
                # Exclude that feature folder across ADF areas
                echo "pipeline/${FOLDER}/**"  >> "${OCTO}"
                echo "dataset/${FOLDER}/**"   >> "${OCTO}"
                echo "dataflow/${FOLDER}/**"  >> "${OCTO}"
                # Some repos place pipelines directly as files under pipeline/
                echo "pipeline/*${FOLDER}*.json" >> "${OCTO}"
                echo "dataset/*${FOLDER}*.json"  >> "${OCTO}"
                echo "dataflow/*${FOLDER}*.json" >> "${OCTO}"
              fi
            done
          else
            echo "# No folders marked ready; nothing excluded" >> "${OCTO}"
          fi

          echo "Generated .octoignore:"
          cat "${OCTO}"

      - name: Set Git identity
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Commit .octoignore (if changed)
        run: |
          set -e
          git add .octoignore
          if ! git diff --cached --quiet; then
            git commit -m "chore(octo): exclude ready-for-${{ inputs.target_enviornment }} folders from Octopus packaging"
            git push
          else
            echo "No changes to commit."
          fi

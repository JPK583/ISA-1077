name: block-pipline
on:
  workflow_dispatch:
    inputs:
      target_enviornment:
        description: "TEMP desired enviornment project will be promoted to."
        type: string
        required: true
#      feature_name:
#        description: "The name of the feature where annotations will be checked."
#        type: string
#        required: true
jobs:
  check-enviornment:
    runs-on: ubuntu-latest
    permissions:
        contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download jq library
        run: sudo apt-get install jq
      - name: Give permissions
        run: chmod +x .github/workflows/verify_annotation.sh
        #The code should look for ANY annotation in a pipeline. 
        #IF it finds it, store the FOLDER name. 
        #Then iterate all matching folder names across datasets 
        #and data flows. What we do next is an open question. 
        #Delete, mark the folder with something for 
        #git actions to ignore

        #Step 1 go to pipeline folder
      - name: Verify which features have annotations
        run: .github/workflows/verify_annotation.sh ${{ inputs.target_enviornment }} "pipeline"
        #Step 2 Iterate through folders and or files (THEY SHOULD BE FOLDERS BUT JUST HAVE A FAILSAFE)
        #Step 3 Go into each folder run script to check annotations, if proper enviornment annotation not present IN ANY PIPELINE, store FOLDER (or maybe file) name.
        #Step 4 add .ignore to any any folder which shares the name.
      - name: Set user
        run: git config --global user.name "${{ github.actor }}"
      - name: Set email
        run: git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
      #- name: Stage changes
      #  run: git add --all
      #- name: Commit changes
      #  run: git commit -m "Removed any unallowed pipelines."
      #- name: Push origin
      #  run: git push -u origin #INSERT NAME OF CURRENT BRANCH